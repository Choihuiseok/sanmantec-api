// server.js
import express from "express";
import cors from "cors";
import fs from "fs/promises";
import path from "path";

const app = express();
app.use(cors());
app.use(express.json());

// 유저 데이터 저장 파일
const USERS_FILE = path.join(process.cwd(), "users.json");

// 회원가입 API
app.post("/api/signup", async (req, res) => {
  const { userId, password } = req.body;
  if (!userId || !password) {
    return res.status(400).json({ ok: false, error: "아이디/비밀번호 필요" });
  }

  // 기존 저장 불러오기
  let users = [];
  try {
    const data = await fs.readFile(USERS_FILE, "utf-8");
    users = JSON.parse(data);
  } catch (_) {}

  // 중복 검사
  if (users.find((u) => u.userId === userId)) {
    return res.status(400).json({ ok: false, error: "이미 존재하는 아이디" });
  }

  // 유저 추가
  users.push({ userId, password }); // ⚠️ 실제 서비스에서는 password를 반드시 해싱하세요!
  await fs.writeFile(USERS_FILE, JSON.stringify(users, null, 2), "utf-8");

  res.json({ ok: true });
});

// 로그인 API
app.post("/api/login", async (req, res) => {
  const { userId, password } = req.body;
  let users = [];
  try {
    users = JSON.parse(await fs.readFile(USERS_FILE, "utf-8"));
  } catch (_) {}

  const user = users.find(
    (u) => u.userId === userId && u.password === password
  );
  if (!user) {
    return res.status(401).json({ ok: false, error: "로그인 실패" });
  }

  res.json({ ok: true, message: "로그인 성공" });
});

app.listen(5000, () => console.log("✅ 서버 실행: http://localhost:5000"));